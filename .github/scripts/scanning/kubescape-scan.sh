#!/bin/bash
set -eo pipefail  # Gestion am√©lior√©e des erreurs

# Configuration des chemins
REPORT_DIR="$GITHUB_WORKSPACE/.github/reports"
OUTPUT_FILE="$REPORT_DIR/scan-results.json"

echo "üîç Initialisation du scan de s√©curit√© Kubernetes..."

# Installation de Kubescape si absent
if ! command -v kubescape &>/dev/null; then
    echo "‚¨áÔ∏è T√©l√©chargement de Kubescape..."
    curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | bash
    export PATH="$HOME/.kubescape:$PATH"
fi

# Cr√©ation du r√©pertoire de rapports
mkdir -p "$REPORT_DIR"

echo "‚öôÔ∏è Param√®tres:"
echo "‚Ä¢ R√©pertoire: $GITHUB_WORKSPACE"
echo "‚Ä¢ Cible: ./**/*.yaml"
echo "‚Ä¢ Exclusions: kind:Secret"
echo "‚Ä¢ Sortie: $OUTPUT_FILE"

# Ex√©cution du scan avec gestion des erreurs
echo "üîÑ Lancement de l'analyse..."
if kubescape scan "$GITHUB_WORKSPACE" \
    --format json \
    --output "$OUTPUT_FILE" \
    --exclude-nodes "kind:Secret" \
    --verbose; then
    
    echo "‚úÖ Analyse termin√©e avec succ√®s"
    echo "üìä Rapport disponible: $OUTPUT_FILE"
    exit 0
else
    echo "‚ùå √âchec de l'analyse"
    echo "‚ö†Ô∏è Consultez les logs pour plus de d√©tails"
    exit 1
fi
