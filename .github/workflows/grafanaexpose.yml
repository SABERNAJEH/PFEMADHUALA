name: Kubernetes Security Scan with Grafana Access

on:
  workflow_dispatch:
  push:
    branches: [main, master]

env:
  CLUSTER_SCAN_OUTPUT: "cluster-scan-results.json"
  GRAFANA_ADMIN_PASSWORD: "Admin@Secure123"
  MINIKUBE_VERSION: "v1.32.0"
  KUBESCAPE_VERSION: "v3.0.10"
  GRAFANA_NODE_PORT: "30000"

jobs:
  security-scan:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Install Kubescape (first step)
        run: |
          # Install Kubescape before anything else
          curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash
          echo "$HOME/.kubescape/bin" >> $GITHUB_PATH
          echo "PATH=$PATH:$HOME/.kubescape/bin" >> $GITHUB_ENV
          kubescape version

      - name: Verify Kubescape installation
        run: |
          which kubescape
          kubescape version

      - name: Configure system
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            ca-certificates \
            curl \
            conntrack \
            socat \
            jq

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${{ env.MINIKUBE_VERSION }}/minikube-linux-amd64
          chmod +x minikube
          sudo install minikube /usr/local/bin/minikube
          minikube version

      - name: Start Minikube cluster
        run: |
          minikube start \
            --driver=docker \
            --memory=8192 \
            --cpus=4 \
            --addons=metrics-server \
            --wait=all

      - name: Run Kubescape scan
        run: |
          kubescape scan \
            --enable-host-scan \
            --format json \
            --output ${{ env.CLUSTER_SCAN_OUTPUT }} \
            --verbose \
            --fail-threshold 100 \
            || echo "Scan completed with exit code $?"

          # Verify scan output
          if [ -f "${{ env.CLUSTER_SCAN_OUTPUT }}" ]; then
            echo "Scan results saved successfully"
            jq '.' "${{ env.CLUSTER_SCAN_OUTPUT }}" > formatted.json
            mv formatted.json "${{ env.CLUSTER_SCAN_OUTPUT }}"
          else
            echo "Error: Scan output file not found!"
            exit 1
          fi

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Install Grafana
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
          kubectl create namespace grafana || true
          
          helm upgrade --install grafana grafana/grafana \
            --namespace grafana \
            --set persistence.enabled=true \
            --set adminPassword="${{ env.GRAFANA_ADMIN_PASSWORD }}" \
            --set service.type=NodePort \
            --set service.nodePort=${{ env.GRAFANA_NODE_PORT }} \
            --wait

          MINIKUBE_IP=$(minikube ip)
          echo "GRAFANA_URL=http://$MINIKUBE_IP:${{ env.GRAFANA_NODE_PORT }}" >> $GITHUB_ENV

      - name: Expose Grafana
        run: |
          echo "=============================================="
          echo "GRAFANA ACCESS INSTRUCTIONS"
          echo "1. Direct URL: $GRAFANA_URL"
          echo "2. Local port-forward: http://localhost:3000"
          echo "Username: admin"
          echo "Password: ${{ env.GRAFANA_ADMIN_PASSWORD }}"
          echo "=============================================="
          
          nohup kubectl port-forward -n grafana svc/grafana 3000:3000 > /dev/null 2>&1 &
          sleep 300  # Keep alive for 5 minutes

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: ${{ env.CLUSTER_SCAN_OUTPUT }}
          retention-days: 3
