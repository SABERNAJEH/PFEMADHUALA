name: Kubernetes Security Scan with Direct Grafana Access

on:
  workflow_dispatch:
  push:
    branches: [main, master]

env:
  CLUSTER_SCAN_OUTPUT: "cluster-scan-results.json"
  GRAFANA_ADMIN_PASSWORD: "admin@123"  # Mot de passe personnalisable
  MINIKUBE_VERSION: "v1.32.0"
  KUBESCAPE_VERSION: "v3.0.10"

jobs:
  security-scan:
    runs-on: ubuntu-22.04
    timeout-minutes: 25

    steps:
      - name: Setup Minikube with Grafana
        run: |
          # Install Minikube
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${{ env.MINIKUBE_VERSION }}/minikube-linux-amd64
          chmod +x minikube
          sudo install minikube /usr/local/bin/minikube

          # Start cluster with Grafana
          minikube start \
            --driver=docker \
            --memory=8192 \
            --cpus=4 \
            --addons=grafana \
            --wait=all
          
          # Expose Grafana on NodePort
          kubectl patch svc grafana -n kubernetes-dashboard \
            --type='json' \
            -p='[{"op": "replace", "path": "/spec/type", "value": "NodePort"}]'
          
          # Set Grafana admin password
          kubectl exec -n kubernetes-dashboard deployment/grafana -- \
            grafana-cli admin reset-admin-password "${{ env.GRAFANA_ADMIN_PASSWORD }}"
          
          # Save access information
          MINIKUBE_IP=$(minikube ip)
          GRAFANA_PORT=$(kubectl get svc -n kubernetes-dashboard grafana -o jsonpath='{.spec.ports[0].nodePort}')
          echo "GRAFANA_URL=http://$MINIKUBE_IP:$GRAFANA_PORT" >> $GITHUB_ENV
          echo "Access Grafana at: http://$MINIKUBE_IP:$GRAFANA_PORT"
          echo "Username: admin"
          echo "Password: ${{ env.GRAFANA_ADMIN_PASSWORD }}"

      - name: Install Kubescape
        run: |
          curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash
          echo "$HOME/.kubescape/bin" >> $GITHUB_PATH
          kubescape version

      - name: Run security scan
        run: |
          kubescape scan \
            --enable-host-scan \
            --format json \
            --output ${{ env.CLUSTER_SCAN_OUTPUT }}

      - name: Display Grafana access info
        run: |
          echo "=== GRAFANA ACCESS ==="
          echo "URL: $GRAFANA_URL"
          echo "Username: admin"
          echo "Password: ${{ env.GRAFANA_ADMIN_PASSWORD }}"
          echo "======================"
          
          # Keep the service running for access
          nohup kubectl port-forward -n kubernetes-dashboard svc/grafana 3000:80 > /dev/null 2>&1 &
          echo "You can also access via port-forwarding at: http://localhost:3000"

      - name: Upload scan results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: ${{ env.CLUSTER_SCAN_OUTPUT }}
          retention-days: 3

      - name: Keep alive for Grafana access
        if: always()
        run: |
          echo "Workflow completed but keeping container alive for 30 minutes for Grafana access..."
          echo "Connect using:"
          echo "1. Direct URL: $GRAFANA_URL"
          echo "2. Via port-forward: http://localhost:3000"
          sleep 1800  # Keep alive for 30 minutes
