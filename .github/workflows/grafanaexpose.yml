name: Kubernetes Security Scan with Grafana Access

on:
  workflow_dispatch:
  push:
    branches: [main, master]

env:
  CLUSTER_SCAN_OUTPUT: "cluster-scan-results.json"
  GRAFANA_ADMIN_PASSWORD: "Admin@Secure123"
  MINIKUBE_VERSION: "v1.32.0"
  KUBESCAPE_VERSION: "v3.0.10"
  GRAFANA_NODE_PORT: "30000"  # Port dans la plage valide (30000-32767)

jobs:
  security-scan:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Configure system
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release \
            conntrack \
            socat \
            jq \
            apt-transport-https \
            docker.io
          
          sudo systemctl enable --now docker
          sudo usermod -aG docker $USER

      - name: Install Minikube and kubectl
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${{ env.MINIKUBE_VERSION }}/minikube-linux-amd64
          chmod +x minikube
          sudo install minikube /usr/local/bin/minikube
          minikube version

      - name: Start Minikube cluster
        run: |
          minikube start \
            --driver=docker \
            --memory=8192 \
            --cpus=4 \
            --addons=metrics-server \
            --wait=all

      - name: Setup Helm and Grafana
        run: |
          # Install Helm
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          
          # Configure Grafana
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
          
          kubectl create namespace grafana || true
          
          helm upgrade --install grafana grafana/grafana \
            --namespace grafana \
            --set persistence.enabled=true \
            --set adminPassword="${{ env.GRAFANA_ADMIN_PASSWORD }}" \
            --set service.type=NodePort \
            --set service.nodePort=${{ env.GRAFANA_NODE_PORT }} \
            --wait
          
          # Expose Grafana service
          minikube service grafana --url -n grafana > /dev/null 2>&1 &
          
          MINIKUBE_IP=$(minikube ip)
          echo "GRAFANA_URL=http://$MINIKUBE_IP:${{ env.GRAFANA_NODE_PORT }}" >> $GITHUB_ENV

      - name: Install Kubescape
        run: |
          curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash
          echo "$HOME/.kubescape/bin" >> $GITHUB_PATH
          kubescape version

      - name: Run security scan
        run: |
          kubescape scan \
            --enable-host-scan \
            --format json \
            --output ${{ env.CLUSTER_SCAN_OUTPUT }} \
            --exclude-namespaces kube-system,grafana

      - name: Display access information
        run: |
          echo "=============================================="
          echo "GRAFANA DASHBOARD ACCESS"
          echo "URL: $GRAFANA_URL"
          echo "Local port-forward: http://localhost:3000"
          echo "Username: admin"
          echo "Password: ${{ env.GRAFANA_ADMIN_PASSWORD }}"
          echo "=============================================="
          
          # Start port-forwarding
          nohup kubectl port-forward -n grafana svc/grafana 3000:3000 > /dev/null 2>&1 &
          
          # Keep alive for 30 minutes
          sleep 1800

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: ${{ env.CLUSTER_SCAN_OUTPUT }}
          retention-days: 3
