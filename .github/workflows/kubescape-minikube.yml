name: Optimized Kubescape Minikube Scan

on:
  workflow_dispatch:
  push:
    branches: [main, master]

env:
  MINIKUBE_VERSION: "v1.32.0"  # Version fixe pour la stabilité
  KUBESCAPE_VERSION: "v3.0.10"  # Version fixe
  MINIKUBE_WAIT_TIMEOUT: "3m"   # Timeout réduit

jobs:
  scan-minikube:
    runs-on: ubuntu-22.04  # OS plus récent et optimisé
    timeout-minutes: 15    # Timeout global réduit

    steps:
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.minikube/cache
            ~/.kubescape
          key: ${{ runner.os }}-k8s-${{ env.MINIKUBE_VERSION }}-${{ env.KUBESCAPE_VERSION }}

      - name: Configure system (optimized)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y --no-install-recommends conntrack socat
          sudo swapoff -a 2>/dev/null || true
          echo "System optimized in $(($SECONDS/60))m$(($SECONDS%60))s"

      - name: Install pre-configured Minikube
        run: |
          if ! command -v minikube &>/dev/null; then
            echo "Installing Minikube..."
            curl -Lo minikube https://storage.googleapis.com/minikube/releases/${{ env.MINIKUBE_VERSION }}/minikube-linux-amd64
            chmod +x minikube
            sudo install minikube /usr/local/bin/minikube
          fi
          minikube version

      - name: Start pre-warmed Minikube
        run: |
          minikube start \
            --driver=docker \
            --container-runtime=containerd \
            --kubernetes-version=stable \
            --wait=all \
            --wait-timeout=${{ env.MINIKUBE_WAIT_TIMEOUT }} \
            --extra-config=kubelet.cgroup-driver=systemd \
            --embed-certs \
            --memory=4096 \
            --cpus=2 \
            --disk-size=10g \
            --delete-on-failure
          echo "Cluster ready in $(($SECONDS/60))m$(($SECONDS%60))s"

      - name: Install cached Kubescape
        run: |
          if ! command -v kubescape &>/dev/null; then
            echo "Installing Kubescape..."
            curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash
            echo "$HOME/.kubescape/bin" >> $GITHUB_PATH
          fi
          kubescape version

      - name: Fast cluster scan
        run: |
          kubescape scan \
            --enable-host-scan \
            --format json \
            --output cluster-scan-results.json \
            --fail-threshold 100 \
            --exclude-namespaces kube-system,kubernetes-dashboard
          echo "Scan completed in $(($SECONDS/60))m$(($SECONDS%60))s"

      - name: Upload results
        uses: actions/upload-artifact@v4  # Version mise à jour
        with:
          name: security-scan-${{ github.run_id }}
          path: cluster-scan-results.json
          retention-days: 1

      - name: Cleanup
        if: always()
        run: |
          minikube delete --purge
          sudo rm -rf ~/.minikube ~/.kube
