name: Optimized Kubescape Minikube Scan

on:
  workflow_dispatch:
  push:
    branches: [main, master]
#TESTTT6666
env:
  CLUSTER_SCAN_OUTPUT: "cluster-scan-results.json"
  MINIKUBE_VERSION: "v1.32.0"
  KUBESCAPE_VERSION: "v3.0.10"
  MINIKUBE_WAIT_TIMEOUT: "3m"
  NOTIFICATION_RECIPIENTS: "najah.wchem@etudiant-isi.utm.tn, saber.fraj@etudiant-isi.utm.tn"  # Ajout d'un destinataire par dÃ©faut

jobs:
  scan-minikube:
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.minikube/cache
            ~/.kubescape
          key: ${{ runner.os }}-k8s-${{ env.MINIKUBE_VERSION }}-${{ env.KUBESCAPE_VERSION }}

      - name: Configure system (optimized)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y --no-install-recommends conntrack socat curl
          sudo swapoff -a 2>/dev/null || true

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/${{ env.MINIKUBE_VERSION }}/minikube-linux-amd64
          chmod +x minikube
          sudo install minikube /usr/local/bin/minikube
          minikube version

      - name: Start Minikube cluster
        run: |
          minikube start \
            --driver=docker \
            --container-runtime=containerd \
            --kubernetes-version=stable \
            --wait=all \
            --wait-timeout=${{ env.MINIKUBE_WAIT_TIMEOUT }} \
            --memory=4096 \
            --cpus=2

      - name: Install Kubescape
        run: |
          curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash
          echo "$HOME/.kubescape/bin" >> $GITHUB_PATH
          $HOME/.kubescape/bin/kubescape version

      - name: Run Kubescape scan
        run: |
          $HOME/.kubescape/bin/kubescape scan \
            --enable-host-scan \
            --format json \
            --output ${{ env.CLUSTER_SCAN_OUTPUT }} \
            || echo "cluster scan completed with exit code $?"
            [ -f "${{ env.CLUSTER_SCAN_OUTPUT }}" ] && \
            jq '.' "${{ env.CLUSTER_SCAN_OUTPUT }}" > temp1.json && \
            mv temp1.json "${{ env.CLUSTER_SCAN_OUTPUT }}"
           # --exclude-namespaces kube-system,kubernetes-dashboard

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-${{ github.run_id }}
          path: ${{ env.CLUSTER_SCAN_OUTPUT }}
          retention-days: 1

      - name: Send Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          secure: true
          subject: "Kubescape Report - ${{ github.repository }}"
          body: "Kubescape scan completed. Please find attached the scan results."
          from: ${{ secrets.GMAIL_USERNAME }}
          to: ${{ env.NOTIFICATION_RECIPIENTS }}  # Utilisation de la variable d'environnement
          attachments: ${{ env.CLUSTER_SCAN_OUTPUT }}

      - name: Cleanup
        if: always()
        run: |
          minikube delete --purge
          sudo rm -rf ~/.minikube ~/.kube
