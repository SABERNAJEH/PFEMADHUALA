name: 🔍 Analyse de Sécurité

on:
  workflow_call:
    secrets:
      EMAIL_FROM:
        required: true
      EMAIL_PWD:
        required: true
      REPORT_TO:
        required: true

jobs:
  security-scan:
    runs-on: ubuntu-latest
    outputs:
      scan-results: ${{ steps.set-outputs.outputs.results }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup environment
        run: |
          mkdir -p .github/reports
          chmod +x .github/scripts/scanning/*.sh
          echo "$HOME/.kubescape/bin" >> $GITHUB_PATH

      - name: Install Kubescape
        run: |
          curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | bash
          kubescape version

      - name: Run static scan and save results
        id: run-scan
        run: |
          # Exécuter le scan et rediriger la sortie vers le fichier
          .github/scripts/scanning/kubescape-scan.sh > .github/reports/scan-results.json 2>&1
          
          # Vérifier que le fichier n'est pas vide
          if [ ! -s .github/reports/scan-results.json ]; then
            echo "Le fichier de résultats est vide, le scan a probablement échoué"
            echo "results={\"error\": \"Scan failed or produced no output\"}" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          # Afficher les premiers caractères pour débogage
          echo "Preview des résultats:"
          head -c 100 .github/reports/scan-results.json

      - name: Save permanent copy
        run: |
          cp .github/reports/scan-results.json .github/reports/scan-results-$(date +%Y%m%d%H%M%S).json
          echo "Copie permanente sauvegardée avec timestamp"

      - name: Send report
        env:
          GMAIL_USER: ${{ secrets.EMAIL_FROM }}
          GMAIL_PASSWORD: ${{ secrets.EMAIL_PWD }}
          REPORT_EMAIL: ${{ secrets.REPORT_TO }}
        run: python .github/scripts/scanning/send-report.py

      - name: Set outputs
        id: set-outputs
        run: |
          echo "results=$(cat .github/reports/scan-results.json | jq -c -a .)" >> $GITHUB_OUTPUT
