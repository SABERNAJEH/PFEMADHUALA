name: 🔍 Kubernetes SSRF Security Test

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Exécution quotidienne

env:
  RECIPIENT_EMAIL: "najah.wchem@etudiant-isi.utm.tn"
  CLUSTER_NAME: "k8s-goat-ssrf-test"

jobs:
  ssrf-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: "1. Checkout Code"
        uses: actions/checkout@v4

      - name: "2. Setup Minikube Cluster"
        run: |
          sudo apt-get update -qq
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker --cpus=2 --memory=4000 --profile=${CLUSTER_NAME}
          minikube profile list

      - name: "3. Deploy Kubernetes Goat"
        run: |
          chmod +x setup-kubernetes-goat.sh
          ./setup-kubernetes-goat.sh
          kubectl wait --for=condition=Ready pods --all -n default --timeout=5m

      - name: "4. Discover SSRF Endpoints"
        id: discovery
        run: |
          SSRF_SERVICE=$(kubectl get svc -n default -l app=ssrf-app -o jsonpath='{.items[0].metadata.name}')
          SSRF_URL=$(minikube service $SSRF_SERVICE -n default --url --profile=${CLUSTER_NAME})
          echo "SSRF_SERVICE=$SSRF_SERVICE" >> $GITHUB_OUTPUT
          echo "SSRF_URL=$SSRF_URL" >> $GITHUB_OUTPUT
          echo "CLUSTER_IP=$(minikube ip --profile=${CLUSTER_NAME})" >> $GITHUB_OUTPUT

      - name: "5. Execute SSRF Attacks"
        id: tests
        continue-on-error: true
        run: |
          # Test matrix
          TARGETS=(
            "http://169.254.169.254/latest/meta-data"
            "https://kubernetes.default/api/v1/secrets"
            "http://metadata-db.default.svc.cluster.local"
            "file:///etc/passwd"
          )

          echo "# SSRF Test Results" > report.md
          echo "## Kubernetes Goat SSRF Report" >> report.md
          echo "**Execution Date:** $(date)" >> report.md
          echo "**Cluster IP:** ${{ steps.discovery.outputs.CLUSTER_IP }}" >> report.md
          echo "\n### Test Results" >> report.md

          for target in "${TARGETS[@]}"; do
            echo "Testing: $target" >> report.md
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.discovery.outputs.SSRF_URL }}?url=$target" || echo "CURL_ERROR")
            
            if [[ "$RESPONSE" == "200" ]]; then
              echo "🟢 VULNERABLE - Received 200 response" >> report.md
            elif [[ "$RESPONSE" == "CURL_ERROR" ]]; then
              echo "🔴 ERROR - Curl failed" >> report.md
            else
              echo "🟡 MITIGATED - Response code: $RESPONSE" >> report.md
            fi
            
            echo "---" >> report.md
          done

      - name: "6. Capture Debug Info"
        if: always()
        run: |
          echo "\n### Cluster State" >> report.md
          kubectl get pods,svc -n default >> report.md
          echo "\n### Network Policies" >> report.md
          kubectl get networkpolicies -A >> report.md

      - name: "7. Send Email Report"
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          subject: "Kubernetes Goat SSRF Test Results - $(date +'%Y-%m-%d')"
          to: ${{ env.RECIPIENT_EMAIL }}
          from: ${{ secrets.GMAIL_USERNAME }}
          body: file://report.md
          html_body: true
          attachments: report.md

      - name: "8. Cleanup Cluster"
        if: always()
        run: |
          minikube delete --profile=${CLUSTER_NAME}
