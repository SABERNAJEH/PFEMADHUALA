name: Kubescape Security Scan
#tt
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  YAML_SCAN_OUTPUT: "yaml-scan-results.json"
  CLUSTER_SCAN_OUTPUT: "cluster-scan-results.json"
  NOTIFICATION_RECIPIENTS: "najah.wchem@etudiant-isi.utm.tn, saber.fraj@etudiant-isi.utm.tn"
#tet
jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Kubescape
        run: |
          curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash
          echo "$HOME/.kubescape/bin" >> $GITHUB_PATH
          $HOME/.kubescape/bin/kubescape version

      - name: Setup Kubernetes Access
        id: setup-cluster
        run: |
          mkdir -p ~/.kube
          
          # Écriture du kubeconfig avec validation
          echo "Processing kubeconfig..."
          if [ -z "${{ secrets.KUBECONFIG }}" ]; then
            echo "::warning::No KUBECONFIG secret found. Cluster scan will be skipped."
            echo "cluster_available=false" >> $GITHUB_ENV
            exit 0
          fi
          
          # Essai d'écriture du fichier
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config.tmp
          
          # Validation du format
          if ! kubectl config view --kubeconfig ~/.kube/config.tmp --raw &> /dev/null; then
            echo "::error::Invalid kubeconfig format. Please verify your secret contains valid YAML."
            echo "::group::Kubeconfig Content (first 100 chars)"
            head -c 100 ~/.kube/config.tmp
            echo -e "\n::endgroup::"
            exit 1
          fi
          
          mv ~/.kube/config.tmp ~/.kube/config
          chmod 600 ~/.kube/config
          echo "cluster_available=true" >> $GITHUB_ENV
          
          export KUBECONFIG=~/.kube/config
          echo "CLUSTER_NAME=$(kubectl config current-context)" >> $GITHUB_ENV
          kubectl cluster-info

      - name: Scan Kubernetes Manifests
        id: yaml-scan
        run: |
          kubescape scan *.yaml \
            --format json \
            --output ${{ env.YAML_SCAN_OUTPUT }} \
            || echo "YAML scan completed with exit code $?"
          
          [ -f "${{ env.YAML_SCAN_OUTPUT }}" ] && \
            jq '.' "${{ env.YAML_SCAN_OUTPUT }}" > temp.json && \
            mv temp.json "${{ env.YAML_SCAN_OUTPUT }}"

      - name: Scan Running Cluster
        if: env.cluster_available == 'true'
        id: cluster-scan
        run: |
          export KUBECONFIG=~/.kube/config
          kubescape scan \
            --kubeconfig ~/.kube/config \
            --format json \
            --output ${{ env.CLUSTER_SCAN_OUTPUT }} \
            || echo "Cluster scan completed with exit code $?"
          
          [ -f "${{ env.CLUSTER_SCAN_OUTPUT }}" ] && \
            jq '.' "${{ env.CLUSTER_SCAN_OUTPUT }}" > temp.json && \
            mv temp.json "${{ env.CLUSTER_SCAN_OUTPUT }}"

      - name: Prepare Notification
        id: prepare-notification
        run: |
          if [ "${{ env.cluster_available }}" = "true" ]; then
            echo "cluster_status=${{ steps.cluster-scan.outcome || 'unknown' }}" >> $GITHUB_ENV
          else
            echo "cluster_status=Not scanned (invalid/missing kubeconfig)" >> $GITHUB_ENV
          fi
          
          echo "::set-output name=report::Security Scan Results:
            - YAML Files: ${{ steps.yaml-scan.outcome }}
            - Cluster: ${{ env.cluster_status }}
            - Timestamp: $(date +"%Y-%m-%d %H:%M:%S")
            Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Upload Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            ${{ env.YAML_SCAN_OUTPUT }}
            ${{ env.CLUSTER_SCAN_OUTPUT }}
          if-no-files-found: warn
          retention-days: 3

      - name: Send Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          secure: true
          subject: "Kubescape Report - ${{ github.repository }}"
          body: "${{ steps.prepare-notification.outputs.report }}"
          from: ${{ secrets.GMAIL_USERNAME }}
          to: ${{ env.NOTIFICATION_RECIPIENTS }}
          attachments: |
            ${{ env.YAML_SCAN_OUTPUT }}
            ${{ env.CLUSTER_SCAN_OUTPUT }}

      - name: Cleanup
        if: always()
        run: |
          if [ -f ~/.kube/config ]; then
            rm -f ~/.kube/config || echo "Cleanup failed but continuing"
          fi
