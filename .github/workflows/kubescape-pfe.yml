name: Kubescape Security Scan

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  YAML_SCAN_OUTPUT: "yaml-scan-results.json"
  CLUSTER_SCAN_OUTPUT: "cluster-scan-results.json"
  NOTIFICATION_RECIPIENTS: "najah.wchem@etudiant-isi.utm.tn, saber.fraj@etudiant-isi.utm.tn"
  KUBECONFIG_PATH: "${{ github.workspace }}/kubeconfig"

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Kubescape (Official Method)
        run: |
          # Installation via la méthode officielle avec vérification
          curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash
          
          # Ajout au PATH et vérification
          export PATH=$PATH:$HOME/.kubescape/bin
          echo "$HOME/.kubescape/bin" >> $GITHUB_PATH
          
          # Double vérification de l'installation
          ls -la $HOME/.kubescape/bin
          $HOME/.kubescape/bin/kubescape version

      - name: Verify Kubescape Installation
        run: |
          echo "Current PATH: $PATH"
          which kubescape || { echo "Kubescape not found in PATH"; exit 1; }
          kubescape version

      - name: Setup Kubernetes Access
        id: setup-cluster
        run: |
          if [ -n "${{ secrets.KUBECONFIG }}" ]; then
            echo "Configuring Kubernetes access..."
            mkdir -p $(dirname "$KUBECONFIG_PATH")
            echo "${{ secrets.KUBECONFIG }}" > "$KUBECONFIG_PATH"
            chmod 600 "$KUBECONFIG_PATH"
            echo "cluster_scanned=true" >> $GITHUB_ENV
          else
            echo "No KUBECONFIG secret found, skipping cluster scan"
            echo "cluster_scanned=false" >> $GITHUB_ENV
          fi

      - name: Scan Kubernetes Manifests
        id: yaml-scan
        run: |
          kubescape scan *.yaml \
            --format json \
            --output "${{ env.YAML_SCAN_OUTPUT }}" \
            || { echo "YAML scan failed with exit code $?"; exit 0; }
          
          if [ -f "${{ env.YAML_SCAN_OUTPUT }}" ]; then
            jq '.' "${{ env.YAML_SCAN_OUTPUT }}" > temp.json && mv temp.json "${{ env.YAML_SCAN_OUTPUT }}"
          fi

      - name: Scan Running Cluster
        if: env.cluster_scanned == 'true'
        id: cluster-scan
        run: |
          KUBECONFIG="$KUBECONFIG_PATH" kubescape scan \
            --format json \
            --output "${{ env.CLUSTER_SCAN_OUTPUT }}" \
            || { echo "Cluster scan failed with exit code $?"; exit 0; }
          
          if [ -f "${{ env.CLUSTER_SCAN_OUTPUT }}" ]; then
            jq '.' "${{ env.CLUSTER_SCAN_OUTPUT }}" > temp.json && mv temp.json "${{ env.CLUSTER_SCAN_OUTPUT }}"
          fi

      - name: Upload Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            ${{ env.YAML_SCAN_OUTPUT }}
            ${{ env.CLUSTER_SCAN_OUTPUT }}
          if-no-files-found: warn
          retention-days: 3

      - name: Prepare Notification
        id: prepare-notification
        run: |
          if [ "${{ env.cluster_scanned }}" = "true" ]; then
            CLUSTER_STATUS="${{ steps.cluster-scan.outcome }}"
          else
            CLUSTER_STATUS="Not scanned"
          fi
          
          echo "NOTIFICATION_BODY=Security Scan Results:
- YAML Files: ${{ steps.yaml-scan.outcome }}
- Cluster: $CLUSTER_STATUS

Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Send Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          secure: true
          subject: "Kubescape Report - ${{ github.repository }}"
          body: "${{ env.NOTIFICATION_BODY }}"
          from: ${{ secrets.GMAIL_USERNAME }}
          to: ${{ env.NOTIFICATION_RECIPIENTS }}
          attachments: |
            ${{ env.YAML_SCAN_OUTPUT }}
            ${{ env.CLUSTER_SCAN_OUTPUT }}

      - name: Cleanup
        if: always()
        run: |
          if [ -f "$KUBECONFIG_PATH" ]; then
            echo "Cleaning up kubeconfig..."
            rm -f "$KUBECONFIG_PATH" || echo "Cleanup failed but continuing"
          fi
